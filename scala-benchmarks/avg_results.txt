[info] welcome to sbt 1.10.7 (Oracle Corporation Java 17.0.14)
[info] loading settings for project scala-benchmarks-build from plugins.sbt...
[info] loading project definition from /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/project
[info] loading settings for project root from build.sbt...
[info] set current project to benchmarks (in build file:/Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/)
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Jmh / run
[info] running org.openjdk.jmh.generators.bytecode.JmhBytecodeGenerator /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/classes /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/src_managed/jmh /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/resource_managed/jmh default
Processing 42 classes from /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/classes with "reflection" generator
Writing out Java source to /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/src_managed/jmh and resources to /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala-benchmarks/target/scala-2.13/resource_managed/jmh
[info] running (fork) org.openjdk.jmh.Main 
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testAddBinary
[info] # Run progress: 0.00% complete, ETA 00:06:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.010 ms/op
[info] # Warmup Iteration   2: 0.010 ms/op
[info] Iteration   1: 0.010 ms/op
[info] Iteration   2: 0.010 ms/op
[info] Iteration   3: 0.010 ms/op
[info] Iteration   4: 0.010 ms/op
[info] Iteration   5: 0.010 ms/op
[info] Result "example.MyBenchmark.testAddBinary":
[info]   0.010 ±(99.9%) 0.001 ms/op [Average]
[info]   (min, avg, max) = (0.010, 0.010, 0.010), stdev = 0.001
[info]   CI (99.9%): [0.010, 0.010] (assumes normal distribution)
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testArrayMod
[info] # Run progress: 16.67% complete, ETA 00:05:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1.892 ms/op
[info] # Warmup Iteration   2: 1.879 ms/op
[info] Iteration   1: 1.865 ms/op
[info] Iteration   2: 1.870 ms/op
[info] Iteration   3: 1.870 ms/op
[info] Iteration   4: 1.878 ms/op
[info] Iteration   5: 1.869 ms/op
[info] Result "example.MyBenchmark.testArrayMod":
[info]   1.870 ±(99.9%) 0.019 ms/op [Average]
[info]   (min, avg, max) = (1.865, 1.870, 1.878), stdev = 0.005
[info]   CI (99.9%): [1.851, 1.889] (assumes normal distribution)
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testListMod
[info] # Run progress: 33.33% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7.992 ms/op
[info] # Warmup Iteration   2: 9.897 ms/op
[info] Iteration   1: 7.557 ms/op
[info] Iteration   2: 7.096 ms/op
[info] Iteration   3: 7.220 ms/op
[info] Iteration   4: 6.771 ms/op
[info] Iteration   5: 8.008 ms/op
[info] Result "example.MyBenchmark.testListMod":
[info]   7.330 ±(99.9%) 1.817 ms/op [Average]
[info]   (min, avg, max) = (6.771, 7.330, 8.008), stdev = 0.472
[info]   CI (99.9%): [5.514, 9.147] (assumes normal distribution)
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testLoop
[info] # Run progress: 50.00% complete, ETA 00:03:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3645.165 ms/op
[info] # Warmup Iteration   2: 3904.663 ms/op
[info] Iteration   1: 3904.091 ms/op
[info] Iteration   2: 3905.120 ms/op
[info] Iteration   3: 3905.154 ms/op
[info] Iteration   4: 3904.675 ms/op
[info] Iteration   5: 3904.284 ms/op
[info] Result "example.MyBenchmark.testLoop":
[info]   3904.665 ±(99.9%) 1.847 ms/op [Average]
[info]   (min, avg, max) = (3904.091, 3904.665, 3905.154), stdev = 0.480
[info]   CI (99.9%): [3902.818, 3906.512] (assumes normal distribution)
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testPalindrome
[info] # Run progress: 66.67% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.044 ms/op
[info] # Warmup Iteration   2: 0.089 ms/op
[info] Iteration   1: 0.132 ms/op
[info] Iteration   2: 0.175 ms/op
[info] Iteration   3: 0.219 ms/op
[info] Iteration   4: 0.263 ms/op
[info] Iteration   5: 0.307 ms/op
[info] Result "example.MyBenchmark.testPalindrome":
[info]   0.219 ±(99.9%) 0.268 ms/op [Average]
[info]   (min, avg, max) = (0.132, 0.219, 0.307), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.487] (assumes normal distribution)
[info] # JMH version: 1.25
[info] # VM version: JDK 17.0.14, Java HotSpot(TM) 64-Bit Server VM, 17.0.14+8-LTS-191
[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk-17.0.14.jdk/Contents/Home/bin/java
[info] # VM options: <none>
[info] # Warmup: 2 iterations, 5 s each
[info] # Measurement: 5 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Average time, time/op
[info] # Benchmark: example.MyBenchmark.testPalindromeRecursive
[info] # Run progress: 83.33% complete, ETA 00:01:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.346 ms/op
[info] # Warmup Iteration   2: 1.416 ms/op
[info] Iteration   1: 3.212 ms/op
[info] Iteration   2: 6.274 ms/op
[info] Iteration   3: 10.349 ms/op
[info] Iteration   4: 15.332 ms/op
[info] Iteration   5: 21.223 ms/op
[info] Result "example.MyBenchmark.testPalindromeRecursive":
[info]   11.278 ±(99.9%) 27.654 ms/op [Average]
[info]   (min, avg, max) = (3.212, 11.278, 21.223), stdev = 7.182
[info]   CI (99.9%): [≈ 0, 38.932] (assumes normal distribution)
[info] # Run complete. Total time: 00:07:09
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                            Mode  Cnt     Score    Error  Units
[info] MyBenchmark.testAddBinary            avgt    5     0.010 ±  0.001  ms/op
[info] MyBenchmark.testArrayMod             avgt    5     1.870 ±  0.019  ms/op
[info] MyBenchmark.testListMod              avgt    5     7.330 ±  1.817  ms/op
[info] MyBenchmark.testLoop                 avgt    5  3904.665 ±  1.847  ms/op
[info] MyBenchmark.testPalindrome           avgt    5     0.219 ±  0.268  ms/op
[info] MyBenchmark.testPalindromeRecursive  avgt    5    11.278 ± 27.654  ms/op
[success] Total time: 430 s (07:10), completed Mar 5, 2025, 12:17:54 AM
