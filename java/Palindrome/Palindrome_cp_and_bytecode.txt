Classfile /C:/Users/nguye/Desktop/assignments/CS263_ScalaVsJava/java/Palindrome/Palindrome.class
  Last modified Feb 12, 2025; size 716 bytes
  SHA-256 checksum 5322ab854e1550d2db57b2863092d348225c3a03d11af319044f520808cabd2b
  Compiled from "Palindrome.java"
final class Palindrome
  minor version: 0
  major version: 61
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #26                         // Palindrome
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Methodref          #8.#9          // java/lang/String.length:()I
   #8 = Class              #10            // java/lang/String
   #9 = NameAndType        #11:#12        // length:()I
  #10 = Utf8               java/lang/String
  #11 = Utf8               length
  #12 = Utf8               ()I
  #13 = Methodref          #8.#14         // java/lang/String.charAt:(I)C
  #14 = NameAndType        #15:#16        // charAt:(I)C
  #15 = Utf8               charAt
  #16 = Utf8               (I)C
  #17 = Fieldref           #18.#19        // java/lang/System.out:Ljava/io/PrintStream;
  #18 = Class              #20            // java/lang/System
  #19 = NameAndType        #21:#22        // out:Ljava/io/PrintStream;
  #20 = Utf8               java/lang/System
  #21 = Utf8               out
  #22 = Utf8               Ljava/io/PrintStream;
  #23 = String             #24            // hi
  #24 = Utf8               hi
  #25 = Methodref          #26.#27        // Palindrome.isPalindrome:(Ljava/lang/String;)Z
  #26 = Class              #28            // Palindrome
  #27 = NameAndType        #29:#30        // isPalindrome:(Ljava/lang/String;)Z
  #28 = Utf8               Palindrome
  #29 = Utf8               isPalindrome
  #30 = Utf8               (Ljava/lang/String;)Z
  #31 = Methodref          #32.#33        // java/io/PrintStream.println:(Z)V
  #32 = Class              #34            // java/io/PrintStream
  #33 = NameAndType        #35:#36        // println:(Z)V
  #34 = Utf8               java/io/PrintStream
  #35 = Utf8               println
  #36 = Utf8               (Z)V
  #37 = String             #38            // ababa
  #38 = Utf8               ababa
  #39 = Utf8               Code
  #40 = Utf8               LineNumberTable
  #41 = Utf8               StackMapTable
  #42 = Utf8               main
  #43 = Utf8               ([Ljava/lang/String;)V
  #44 = Utf8               SourceFile
  #45 = Utf8               Palindrome.java
{
  Palindrome();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1: 0

  static boolean isPalindrome(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #7                  // Method java/lang/String.length:()I
         4: istore_1
         5: iconst_0
         6: istore_2
         7: iconst_0
         8: istore_3
         9: iload_3
        10: iload_1
        11: if_icmpgt     54
        14: iload_1
        15: ifeq          23
        18: iload_1
        19: iconst_1
        20: if_icmpne     28
        23: iconst_1
        24: istore_2
        25: goto          45
        28: aload_0
        29: iload_3
        30: invokevirtual #13                 // Method java/lang/String.charAt:(I)C
        33: aload_0
        34: iload_1
        35: iconst_1
        36: isub
        37: invokevirtual #13                 // Method java/lang/String.charAt:(I)C
        40: if_icmpeq     45
        43: iconst_0
        44: istore_2
        45: iinc          1, -1
        48: iinc          3, 1
        51: goto          9
        54: iload_2
        55: ireturn
      LineNumberTable:
        line 4: 0
        line 5: 5
        line 6: 7
        line 7: 14
        line 8: 23
        line 9: 28
        line 10: 43
        line 12: 45
        line 6: 48
        line 14: 54
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 9
          locals = [ int, int, int ]
        frame_type = 13 /* same */
        frame_type = 4 /* same */
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 8

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #17                 // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #23                 // String hi
         5: invokestatic  #25                 // Method isPalindrome:(Ljava/lang/String;)Z
         8: invokevirtual #31                 // Method java/io/PrintStream.println:(Z)V
        11: getstatic     #17                 // Field java/lang/System.out:Ljava/io/PrintStream;
        14: ldc           #37                 // String ababa
        16: invokestatic  #25                 // Method isPalindrome:(Ljava/lang/String;)Z
        19: invokevirtual #31                 // Method java/io/PrintStream.println:(Z)V
        22: return
      LineNumberTable:
        line 18: 0
        line 19: 11
        line 20: 22
}
SourceFile: "Palindrome.java"
