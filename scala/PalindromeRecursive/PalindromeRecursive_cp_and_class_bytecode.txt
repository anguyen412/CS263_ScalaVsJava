Classfile /Users/sarah/Desktop/UCSB/classes/W25CS263/CS263_ScalaVsJava/scala/PalindromeRecursive/PalindromeRecursive$.class
  Last modified Feb 10, 2025; size 1588 bytes
  SHA-256 checksum 33489b670b222853ce855641c100755097f97185196bc6b3b6eb1073401d13e8
  Compiled from "PalindromeRecursive.scala"
public final class PalindromeRecursive$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // PalindromeRecursive$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 2
Constant pool:
   #1 = Utf8               PalindromeRecursive$
   #2 = Class              #1             // PalindromeRecursive$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               PalindromeRecursive.scala
   #8 = Utf8               MODULE$
   #9 = Utf8               LPalindromeRecursive$;
  #10 = Utf8               <init>
  #11 = Utf8               ()V
  #12 = NameAndType        #10:#11        // "<init>":()V
  #13 = Methodref          #4.#12         // java/lang/Object."<init>":()V
  #14 = Utf8               this
  #15 = Utf8               <clinit>
  #16 = Methodref          #2.#12         // PalindromeRecursive$."<init>":()V
  #17 = NameAndType        #8:#9          // MODULE$:LPalindromeRecursive$;
  #18 = Fieldref           #2.#17         // PalindromeRecursive$.MODULE$:LPalindromeRecursive$;
  #19 = Utf8               writeReplace
  #20 = Utf8               ()Ljava/lang/Object;
  #21 = Utf8               scala/runtime/ModuleSerializationProxy
  #22 = Class              #21            // scala/runtime/ModuleSerializationProxy
  #23 = Utf8               (Ljava/lang/Class;)V
  #24 = NameAndType        #10:#23        // "<init>":(Ljava/lang/Class;)V
  #25 = Methodref          #22.#24        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #26 = Utf8               isPalindrome
  #27 = Utf8               (Ljava/lang/String;)Z
  #28 = Utf8               str
  #29 = Utf8               java/lang/String
  #30 = Class              #29            // java/lang/String
  #31 = Utf8               length
  #32 = Utf8               ()I
  #33 = NameAndType        #31:#32        // length:()I
  #34 = Methodref          #30.#33        // java/lang/String.length:()I
  #35 = Utf8               scala/collection/StringOps$
  #36 = Class              #35            // scala/collection/StringOps$
  #37 = Utf8               Lscala/collection/StringOps$;
  #38 = NameAndType        #8:#37         // MODULE$:Lscala/collection/StringOps$;
  #39 = Fieldref           #36.#38        // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #40 = Utf8               scala/Predef$
  #41 = Class              #40            // scala/Predef$
  #42 = Utf8               Lscala/Predef$;
  #43 = NameAndType        #8:#42         // MODULE$:Lscala/Predef$;
  #44 = Fieldref           #41.#43        // scala/Predef$.MODULE$:Lscala/Predef$;
  #45 = Utf8               augmentString
  #46 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #47 = NameAndType        #45:#46        // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #48 = Methodref          #41.#47        // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #49 = Utf8               apply$extension
  #50 = Utf8               (Ljava/lang/String;I)C
  #51 = NameAndType        #49:#50        // apply$extension:(Ljava/lang/String;I)C
  #52 = Methodref          #36.#51        // scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
  #53 = Utf8               substring
  #54 = Utf8               (II)Ljava/lang/String;
  #55 = NameAndType        #53:#54        // substring:(II)Ljava/lang/String;
  #56 = Methodref          #30.#55        // java/lang/String.substring:(II)Ljava/lang/String;
  #57 = Utf8               Ljava/lang/String;
  #58 = Utf8               main
  #59 = Utf8               ([Ljava/lang/String;)V
  #60 = Utf8               args
  #61 = Utf8               hi
  #62 = String             #61            // hi
  #63 = NameAndType        #26:#27        // isPalindrome:(Ljava/lang/String;)Z
  #64 = Methodref          #2.#63         // PalindromeRecursive$.isPalindrome:(Ljava/lang/String;)Z
  #65 = Utf8               scala/runtime/BoxesRunTime
  #66 = Class              #65            // scala/runtime/BoxesRunTime
  #67 = Utf8               boxToBoolean
  #68 = Utf8               (Z)Ljava/lang/Boolean;
  #69 = NameAndType        #67:#68        // boxToBoolean:(Z)Ljava/lang/Boolean;
  #70 = Methodref          #66.#69        // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #71 = Utf8               println
  #72 = Utf8               (Ljava/lang/Object;)V
  #73 = NameAndType        #71:#72        // println:(Ljava/lang/Object;)V
  #74 = Methodref          #41.#73        // scala/Predef$.println:(Ljava/lang/Object;)V
  #75 = Utf8               ababa
  #76 = String             #75            // ababa
  #77 = Utf8               print
  #78 = NameAndType        #77:#72        // print:(Ljava/lang/Object;)V
  #79 = Methodref          #41.#78        // scala/Predef$.print:(Ljava/lang/Object;)V
  #80 = Utf8               [Ljava/lang/String;
  #81 = Utf8               Code
  #82 = Utf8               LineNumberTable
  #83 = Utf8               LocalVariableTable
  #84 = Utf8               StackMapTable
  #85 = Utf8               MethodParameters
  #86 = Utf8               Signature
  #87 = Utf8               SourceFile
  #88 = Utf8               Scala
{
  public static final PalindromeRecursive$ MODULE$;
    descriptor: LPalindromeRecursive$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class PalindromeRecursive$
         3: dup
         4: invokespecial #16                 // Method "<init>":()V
         7: putstatic     #18                 // Field MODULE$:LPalindromeRecursive$;
        10: return
      LineNumberTable:
        line 2: 0

  public boolean isPalindrome(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #34                 // Method java/lang/String.length:()I
         4: iconst_0
         5: if_icmpeq     16
         8: aload_1
         9: invokevirtual #34                 // Method java/lang/String.length:()I
        12: iconst_1
        13: if_icmpne     18
        16: iconst_1
        17: ireturn
        18: getstatic     #39                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        21: getstatic     #44                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        24: aload_1
        25: invokevirtual #48                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        28: iconst_0
        29: invokevirtual #52                 // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        32: getstatic     #39                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        35: getstatic     #44                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        38: aload_1
        39: invokevirtual #48                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        42: aload_1
        43: invokevirtual #34                 // Method java/lang/String.length:()I
        46: iconst_1
        47: isub
        48: invokevirtual #52                 // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        51: if_icmpne     69
        54: aload_1
        55: iconst_1
        56: aload_1
        57: invokevirtual #34                 // Method java/lang/String.length:()I
        60: iconst_1
        61: isub
        62: invokevirtual #56                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        65: astore_1
        66: goto          0
        69: iconst_0
        70: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 15 /* same */
        frame_type = 1 /* same */
        frame_type = 50 /* same */
      LineNumberTable:
        line 2: 0
        line 3: 0
        line 4: 16
        line 6: 18
        line 7: 54
        line 8: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   LPalindromeRecursive$;
            0      71     1   str   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      str                            final

  public void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #44                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: ldc           #62                 // String hi
         6: invokevirtual #64                 // Method isPalindrome:(Ljava/lang/String;)Z
         9: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        12: invokevirtual #74                 // Method scala/Predef$.println:(Ljava/lang/Object;)V
        15: getstatic     #44                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_0
        19: ldc           #76                 // String ababa
        21: invokevirtual #64                 // Method isPalindrome:(Ljava/lang/String;)Z
        24: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        27: invokevirtual #79                 // Method scala/Predef$.print:(Ljava/lang/Object;)V
        30: return
      LineNumberTable:
        line 11: 0
        line 12: 0
        line 13: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   LPalindromeRecursive$;
            0      31     1  args   [Ljava/lang/String;
    Signature: #59                          // ([Ljava/lang/String;)V
    MethodParameters:
      Name                           Flags
      args                           final
}
SourceFile: "PalindromeRecursive.scala"
  Scala: length = 0x0 (unknown attribute)

